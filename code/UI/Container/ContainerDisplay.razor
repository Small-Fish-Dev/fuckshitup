@namespace FUCKSHIT.UI
@inherits Panel

@if ( !Container.IsValid() )
	return;

<root>
	@foreach ( var slotCollection in Container.SlotCollections )
	{
		if ( slotCollection is null )
			continue;

		<SlotCollectionDisplay Container=@this SlotCollection=@slotCollection />
	}
</root>

@code {
	private const float GRID_SIZE = SlotCollectionDisplay.GRID_SIZE;

	public Container Container { get; set; }

	public ContainerBox HoveredBox { get; set; }
	public Vector2Int HoveredPosition { get; set; }

	public override void Tick()
	{
		base.Tick();

		if ( HoveredBox is null )
			return;

		var offset = Vector2Int.Zero;
		var dragPanel = DragItemPanel.Instance;
		if ( dragPanel is not null )
		{
			var localPosition = dragPanel.LocalPosition * dragPanel.Box.Rect.Size / GRID_SIZE * ScaleToScreen;
			offset = new Vector2Int( (int)localPosition.x, (int)localPosition.y );
		}

		var pos = HoveredBox.MousePosition;
		pos /= GRID_SIZE * ScaleToScreen;

		HoveredPosition = new Vector2Int( (int)pos.x, (int)pos.y ) - offset;
	}

	public void Released( Item item, bool rotated )
	{
		if ( !item.IsValid() )
			return;

		item.TryMove( Container, HoveredBox.Box, HoveredPosition, rotated );
	}

	protected override int BuildHash()
		=> HashCode.Combine(
			Container.IsValid(),
			Container?.SlotCollections?.HashCombine( slotCollection => slotCollection?.GetHashCode() ?? 0 )
		);
}
